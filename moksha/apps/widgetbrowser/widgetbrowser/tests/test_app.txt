>>> from widgetbrowser import WidgetBrowser
>>> from webtest import TestApp

>>> app = TestApp(WidgetBrowser())

>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/demo')
>>> assert 'default' in r

>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/')
>>> assert 'Demo' in r

>>> r = app.get('/os.open/demo', status=404)

Test that code isn't executed if not allowed

>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/demo?_disp="foo"')
>>> assert 'default' in r

>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/template')
>>> assert '$value' in r

>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/source')
>>> assert 'class' in r
>>> assert 'TestWidget' in r

>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/parameters')
>>> assert 'Inherited' in r

Test posting:

>>> r = app.post('/widgetbrowser.tests.widgets.TestWidget/demo', {'some_key':'foo'})
>>> assert 'some_key' in r

# the following is just to test the failed validation code-path
>>> r = app.post('/widgetbrowser.tests.widgets.TestWidget/demo', {'break':'y'})
>>> assert 'some_key' not in r

Test unimplemented methods:
>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/foobarize', status=501)

Test custom controller

>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/test')
>>> assert 'Testing TestWidget' in r

Now with code execution

>>> app = TestApp(WidgetBrowser(interactive=True))
>>> r = app.get('/widgetbrowser.tests.widgets.TestWidget/demo?_disp="foo"')
>>> assert 'foo' in r
