#
# moksha - Pylons development environment configuration
#
# The %(here)s variable will be replaced with the parent directory of this file
#
# This file is for deployment specific config options -- other configuration
# that is always required for the app is done in the config directory, 
# and generally should not be modified by end users. 

[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

##
## Moksha-specific configuration options
##

# Where to store the feed caches.
feed_cache = sqlite:///%(here)s/feeds.sqlite
#feed_cache = %(here)s/data/feeds

# Where to initialize and store our application databases.  %s is the app name.
app_db = sqlite:///%s.db

# The location of our Orbited server
orbited_host = localhost
orbited_port = 9000

# Stomp broker configuration.
stomp_broker = localhost
stomp_port = 61613
stomp_user = guest
stomp_pass = guest

# Optional AMQP Broker.
#amqp_broker = guest/guest@localhost

# Moksha chat configuration

# Use a built-in IRC server
#chat.backend = irc://localhost:9999
#chat.builtin = true
chat.backend = irc://irc.freenode.net:6667
chat.rooms = default
chat.default.staticRoomName = moksha
chat.default.roomAssignmentMode = static
chat.default.display.greeting = Moksha Chat
#chat.default.display.floating = true
#chat.default.display.floatingToggle = false
#chat.default.display.width = 400
#chat.default.display.height = 300
#chat.default.display.theme = simple
#chat.default.display.resizable = true

[server:main]
use = egg:Paste#http
host = localhost
port = 8080

[app:main]
use = egg:moksha
full_stack = true
#lang = ru
cache_dir = %(here)s/data
beaker.session.key = moksha
beaker.session.secret = somesecret

beaker.cache.type = memory
#beaker.cache.type = memcached

# If you'd like to fine-tune the individual locations of the cache data dirs
# for the Cache data, or the Session saves, un-comment the desired settings
# here:
#beaker.cache.data_dir = %(here)s/data/cache
#beaker.session.data_dir = %(here)s/data/sessions



# pick the form for your database
# %(here) may include a ':' character on Windows environments; this can
# invalidate the URI when specifying a SQLite db via path name
# sqlalchemy.url=postgres://username:password:port@hostname/databasename 
# sqlalchemy.url=mysql://username:password@hostname:port/databasename


# If you have sqlite, here's a simple default to get you started
# in development

sqlalchemy.url = sqlite:///%(here)s/devdata.db
sqlalchemy.echo = true
sqlalchemy.echo_pool = false
sqlalchemy.pool_recycle = 3600

# WARNING: *THE LINE BELOW MUST BE UNCOMMENTED ON A PRODUCTION ENVIRONMENT*
# Debug mode will enable the interactive debugging tool, allowing ANYONE to
# execute malicious code after an exception is raised.
#set debug = false

# Logging configuration
# Add additional loggers, handlers, formatters here
# Uses python's logging config file format
# http://docs.python.org/lib/logging-config-fileformat.html

[loggers]
keys = root, moksha, sqlalchemy, tg

[handlers]
keys = console

[formatters]
keys = generic

# If you create additional loggers, add them as a key to [loggers]
[logger_root]
level = INFO
handlers = console

[logger_moksha]
level = DEBUG
handlers =
qualname = moksha

[logger_tg]
level = DEBUG
handlers =
qualname = tg

[logger_pylons]
level = DEBUG
handlers =
qualname = pylons

[logger_sqlalchemy]
level = DEBUG
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

# If you create additional handlers, add them as a key to [handlers]
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

# If you create additional formatters, add them as a key to [formatters]
[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S
